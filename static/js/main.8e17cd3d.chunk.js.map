{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendList.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem.js","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","class","styles","profile","description","src","alt","label","quantity","followers","views","likes","defaultProps","color","item","Number","id","replace","Statistics","title","className","statistics","statList","map","style","backgroundColor","percentage","FriendListItem","isOnline","isOffline","width","propType","PropTypes","string","isRequired","FriendList","friends","friendList","friend","TransactionHistory","items","transTable","table","tableBody","tableData","type","toUpperCase","slice","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e17cd3d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3dzvr\",\"description\":\"Profile_description__2GJPq\",\"avatar\":\"Profile_avatar__aV4u5\",\"name\":\"Profile_name__2Psdw\",\"tag\":\"Profile_tag__20iCl\",\"location\":\"Profile_location__3GRdm\",\"stats\":\"Profile_stats__25zJx\",\"quantity\":\"Profile_quantity__1zFQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"FriendList_friends__3U4Am\",\"friendlist\":\"FriendList_friendlist__2Leq6\",\"item\":\"FriendList_item__-lYix\",\"avatar\":\"FriendList_avatar__2fiZr\",\"status\":\"FriendList_status__3C5jV\",\"name\":\"FriendList_name__2fvFO\",\"friendList\":\"FriendList_friendList__1lQQU\",\"isOnline\":\"FriendList_isOnline__kZ_8Q\",\"isOffline\":\"FriendList_isOffline__3xTH0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2QFok\",\"title\":\"Statistics_title__3PVIg\",\"statList\":\"Statistics_statList__3BR2u\",\"item\":\"Statistics_item__1vE2T\",\"label\":\"Statistics_label__227YU\",\"percentage\":\"Statistics_percentage__3inQt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transTable\":\"TransactionHistory_transTable__1HjjE\",\"table\":\"TransactionHistory_table__eBbE8\"};","import styles from '../Profile/Profile.module.css';\nimport PropTypes from 'prop-types';\n\nconst Profile = ({ name, tag, location, avatar, stats }) => {\n  return (\n    <div class={styles.profile}>\n      <div class={styles.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" class={styles.avatar} />\n        <p class={styles.name}>{name}</p>\n        <p class={styles.tag}>@{tag}</p>\n        <p class={styles.location}>{location}</p>\n      </div>\n      <ul class={styles.stats}>\n        <li>\n          <span class={styles.label}>Followers</span>\n          <span class={styles.quantity}>{stats.followers}</span>\n        </li>\n        <li>\n          <span class={styles.label}>Views</span>\n          <span class={styles.quantity}>{stats.views}</span>\n        </li>\n        <li>\n          <span class={styles.label}>Likes</span>\n          <span class={styles.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n\nProfile.defaultProps = {\n  name: 'User name',\n  tag: '@User tag',\n  location: 'User location',\n  avatar: './src/photo1.jpeg',\n  stats: {\n    followers: '0',\n    views: '0',\n    likes: '0',\n  },\n};\n\nexport default Profile;\n","import styles from '../Statistics/Statistics.module.css';\nimport PropTypes from 'prop-types';\n\nconst color = item => {\n  const colorArray = ['#E74C3C', '#8E44AD', '#3498DB', '#27AE60', '#F39C12'];\n  return `${colorArray[Number(item.id.replace(/[^0-9]/g, '')) % 5]}`;\n};\n\nconst Statistics = ({ title, stats }) => {\n  return (\n    <section className={styles.statistics}>\n      <h2 class={styles.title}>{title}</h2>\n      <ul class={styles.statList}>\n        {stats.map(item => (\n          <li\n            key={item.id}\n            class={styles.item}\n            style={{ backgroundColor: color(item) }}\n          >\n            <span class={styles.label}>{item.label}</span>\n            <span class={styles.percentage}>{item.percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  id: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n\nStatistics.defaultProps = {\n  title: '',\n  label: 'format',\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport styles from '../FriendList/FriendList.module.css';\n\nconst FriendListItem = ({ avatar, name, isOnline = 'true' }) => {\n  return (\n    <li className={styles.item}>\n      <span className={isOnline ? styles.isOnline : styles.isOffline}></span>\n      <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propType = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.string.isRequired,\n};\n\nexport default FriendListItem;","import FriendListItem from './FriendListItem';\nimport PropTypes from 'prop-types';\nimport styles from '../FriendList/FriendList.module.css';\n\nconst FriendList = ({ friends = [] }) => {\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          isOnline={friend.isOnline}\n          avatar={friend.avatar}\n          name={friend.name}\n        />\n      ))}\n    </ul>\n  );\n};\n\n//рендер в 1 файле\n/* import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../FriendList/FriendList.module.css';\nexport default function FriendList(props) {\n  const { friends } = props;\n  return (\n    <ul className={styles.friendList}>\n      {friends.map(friend => (\n        <li className={styles.item} key={friend.id}>\n          <span\n            className={friend.isOnline ? styles.isOnline : styles.isOffline}\n          ></span>\n          <img\n            className={styles.avatar}\n            src={friend.avatar}\n            alt=\"\"\n            width=\"48\"\n          />\n          <p className={styles.name}>{friend.name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n} */\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      isOnline: PropTypes.bool.isRequired,\n      avatar: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;","import styles from '../TransactionHistory/TransactionHistory.module.css';\nimport PropTypes from 'prop-types';\n\nfunction upperFirstLetter(string) {\n  let newStr = string[0].toUpperCase() + string.slice(1);\n  return newStr;\n}\nconst TransactionHistory = ({ items }) => {\n  return (\n    <div class={styles.transTable}>\n      <table class=\"transaction-history\">\n        <thead class={styles.table}>\n          <tr>\n            <th>TYPE</th>\n            <th>AMOUNT</th>\n            <th>CURRENCY</th>\n          </tr>\n        </thead>\n        <tbody class={styles.tableBody}>\n          {items.map(item => (\n            <tr key={item.id}>\n              <td class={styles.tableData}>{upperFirstLetter(item.type)}</td>\n              <td class={styles.tableData}>{item.amount}</td>\n              <td class={styles.tableData}>{item.currency}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\nTransactionHistory.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string,\n};\nTransactionHistory.defaultProps = {\n  type: 'Type',\n  currency: 'Currency',\n};\n\nexport default TransactionHistory;\n","import Profile from './components/Profile/Profile';\nimport user from './components/Profile/user.json';\nimport Statistics from './components/Statistics/Statistics';\nimport statisticalData from './components/Statistics/statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friends from './components/FriendList/friends.json';\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './components/TransactionHistory/transactions.json';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n     \n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}